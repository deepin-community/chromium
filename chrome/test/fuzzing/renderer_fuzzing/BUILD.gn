# Copyright 2024 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//chrome/test/fuzzing/in_process_fuzzer.gni")
import("//chrome/test/fuzzing/renderer_fuzzing/in_process_renderer_fuzzing.gni")
import(
    "//chrome/test/fuzzing/renderer_fuzzing/ipc_fuzzing/mojom_interfaces.gni")

group("test") {
  testonly = true
}

if (fuzzing_engine_supports_custom_main) {
  source_set("renderer_in_process_fuzzer_runner") {
    testonly = true
    sources = [ "in_process_renderer_fuzzing.h" ]
    deps = [
      "//base",
      "//chrome/test:test_support",
      "//chrome/test/fuzzing:in_process_fuzzer_runner",
      "//chrome/test/fuzzing:in_process_proto_fuzzer_runner",
      "//testing/libfuzzer:renderer_fuzzing",
    ]
  }
}

if (!is_android) {
  action("renderer_in_process_mojolpm_fuzzer_generator") {
    testonly = true
    script = "//chrome/test/fuzzing/renderer_fuzzing/ipc_fuzzing/generate_testcase.py"
    args = [
      "-n",
      "renderer_in_process_mojolpm_fuzzer",
      "-d",
      rebase_path("${target_gen_dir}/", root_gen_dir),
      "-o",
      rebase_path("${target_gen_dir}/testcase.h", root_build_dir),
      "-c",
    ]
    foreach(interface, blink_browser_exposed_interfaces) {
      args += [ interface[1] ]
    }
    args += [ "-p" ]
    foreach(interface, process_browser_exposed_interfaces) {
      args += [ interface[1] ]
    }
    outputs = [ "${target_gen_dir}/testcase.h" ]
  }
  in_process_renderer_mojolpm_generated_fuzzer(
      "renderer_in_process_mojolpm_fuzzer") {
    sources = [ "renderer_in_process_mojolpm_fuzzer.cc" ]

    interfaces = blink_browser_exposed_interfaces
    interfaces += process_browser_exposed_interfaces

    deps = [
      ":renderer_in_process_mojolpm_fuzzer_generator",
      "//chrome/test:test_support",
      "//chrome/test/fuzzing:in_process_proto_fuzzer_runner",
      "//components/metrics/public/mojom:single_sample_metrics_mojo_bindings_mojolpm",
      "//content/common:mojo_bindings_mojolpm",
      "//content/test/fuzzer:mojolpm_fuzzer_support",
      "//media/mojo/mojom:mojom_mojolpm",
      "//services/resource_coordinator/public/mojom:mojom_mojolpm",
      "//testing/libfuzzer:renderer_fuzzing",
      "//testing/libfuzzer/proto:url_proto_converter",
      "//third_party/blink/public/common:storage_key_proto_converter",
      "//third_party/blink/public/mojom:embedded_frame_sink_mojo_bindings_mojolpm",
      "//third_party/blink/public/mojom:mojom_core_mojolpm",
      "//third_party/blink/public/mojom:mojom_modules_mojolpm",
      "//third_party/blink/public/mojom:mojom_platform_mojolpm",
      "//third_party/blink/public/mojom:web_bluetooth_mojo_bindings_mojolpm",
    ]

    proto_deps = [
      "//components/metrics/public/mojom:single_sample_metrics_mojo_bindings_mojolpm",
      "//content/common:mojo_bindings_mojolpm",
      "//media/mojo/mojom:mojom_mojolpm",
      "//services/resource_coordinator/public/mojom:mojom_mojolpm",
      "//third_party/blink/public/mojom:embedded_frame_sink_mojo_bindings_mojolpm",
      "//third_party/blink/public/mojom:mojom_core_mojolpm",
      "//third_party/blink/public/mojom:mojom_modules_mojolpm",
      "//third_party/blink/public/mojom:mojom_platform_mojolpm",
      "//third_party/blink/public/mojom:web_bluetooth_mojo_bindings_mojolpm",
    ]
  }
}
